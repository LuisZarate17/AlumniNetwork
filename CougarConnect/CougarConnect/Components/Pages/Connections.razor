@page "/Connections"
@attribute [StreamRendering]
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.WebUtilities
@using CougarConnect.Data
@inject UserManager<ApplicationUser> UserManager
@inject SupabaseService DBService
@inject AuthenticationStateProvider AuthenticationStateProvider

<PageTitle>Connections</PageTitle>

<h1>Connections</h1>

<p>This is where you can view your sent connection requests.</p>

@if (allConnections == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <h2>Connections</h2>
    @if (allConnections.Any())
    {
        <table class="table">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Grad Year</th>
                    <th>City</th>
                    <th>Mojor</th>
                    <th>Company</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var connection in allConnections)
                {
                    <tr>
                        <td>@connection.First @connection.Last</td>
                        <td>@connection.GradYear</td>
                        <td>@connection.City</td>
                        <td>@connection.Major</td>
                        <td>@connection.Company</td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <p>No connections at the moment.</p>
    }
}

@code {
    private List<Item> allConnections = new List<Item>();
    Item currentUser;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        if (user.Identity.IsAuthenticated)
        {
            var result = await DBService.GetData<Item>(user.Identity.Name, "Email");
            currentUser = result.FirstOrDefault();

            if (currentUser != null)
            {
                foreach (var connection in currentUser.ConnectionList)
                {
                    var connectionResult = await DBService.GetData<Item>(connection.ToString(), "id");
                    allConnections.Add(connectionResult.FirstOrDefault());
                }
            }
        }
    }

    public class Item
    {
        public long id { get; set; }
        public string First { get; set; }
        public string Last { get; set; }
        public string GradYear { get; set; }
        public string City { get; set; }
        public string Major { get; set; }
        public string Company { get; set; }
        public long[] ConnectionList { get; set; }
        public string Email { get; set; }
    }
}
